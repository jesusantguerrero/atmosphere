version: "3.7"
services:
  web:
    build:
      args:
        uid: 1000
        TZ: America\New_York
      context: ./
      dockerfile: Dockerfile
    image: loger
    container_name: loger-app
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped
    env_file:
      - .env.docker
    volumes:
      - ./:/app
      - ./Caddyfile.dev:/etc/caddy/Caddyfile
      - ./docker-compose/web/timezone:/etc/timezone
      - loger_db:/var/lib/mysql
    environment:
        DEBUG: "debug"
        # Change the following value if you know how it works.
        # MERCURE_TRANSPORT_URL: "bolt://mercure.db"
        MERCURE_PUBLISHER_JWT_KEY: "${MERCURE_PUBLISHER_JWT_KEY}"
        MERCURE_SUBSCRIBER_JWT_KEY: "${MERCURE_SUBSCRIBER_JWT_KEY}"
        # In the cors_origin, add your domain(s). Or just use *
        MERCURE_EXTRA_DIRECTIVES: |-
            cors_origins "*"
            anonymous
    networks:
      - loger
    depends_on:
      - db
      - redis
  db:
    image: mariadb:10.8.4
    container_name: loger-db
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./docker-compose/mysql:/docker-entrypoint-initdb.d
      - loger_db:/var/lib/mysql
      - ./docker-compose/mysql:/home/root/cache/
    networks:
      - loger
  redis:
    image: 'redis:alpine'
    ports:
      - '${FORWARD_REDIS_PORT:-6379}:6379'
    volumes:
      - ./docker-compose/redis:/data
    networks:
      - loger
  memcached:
      image: 'memcached:alpine'
      ports:
          - '11211:11211'
      networks:
          - loger
  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - loger
  cron:
    build:
      context: .
      dockerfile: cron.dockerfile
    container_name: cron
    volumes:
      - ./:/app
    depends_on:
      - web
    networks:
      - loger
volumes:
  loger_db:
    driver: local
networks:
  loger:
    driver: bridge
